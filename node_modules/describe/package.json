{
  "_args": [
    [
      {
        "raw": "describe@>=0.8.0",
        "scope": null,
        "escapedName": "describe",
        "name": "describe",
        "rawSpec": ">=0.8.0",
        "spec": ">=0.8.0",
        "type": "range"
      },
      "/home/oto1ro/nodejs/wikipedia/node_modules/discord"
    ]
  ],
  "_from": "describe@>=0.8.0",
  "_id": "describe@1.2.0",
  "_inCache": true,
  "_location": "/describe",
  "_npmUser": {
    "name": "yuffster",
    "email": "msteigerwalt@gmail.com"
  },
  "_npmVersion": "1.2.14",
  "_phantomChildren": {},
  "_requested": {
    "raw": "describe@>=0.8.0",
    "scope": null,
    "escapedName": "describe",
    "name": "describe",
    "rawSpec": ">=0.8.0",
    "spec": ">=0.8.0",
    "type": "range"
  },
  "_requiredBy": [
    "/discord"
  ],
  "_resolved": "https://registry.npmjs.org/describe/-/describe-1.2.0.tgz",
  "_shasum": "3b42efa6dca1aa2445ef6d15c19854de583711c0",
  "_shrinkwrap": null,
  "_spec": "describe@>=0.8.0",
  "_where": "/home/oto1ro/nodejs/wikipedia/node_modules/discord",
  "author": {
    "name": "Michelle Steigerwalt",
    "url": "http://msteigerwalt.com"
  },
  "bugs": {
    "url": "https://github.com/yuffster/describe/issues"
  },
  "dependencies": {
    "string-color": ">= 0.8.0"
  },
  "description": "An extremely lightweight method for running tests.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "3b42efa6dca1aa2445ef6d15c19854de583711c0",
    "tarball": "https://registry.npmjs.org/describe/-/describe-1.2.0.tgz"
  },
  "homepage": "http://github.com/yuffster/describe",
  "main": "describe.js",
  "maintainers": [
    {
      "name": "yuffster",
      "email": "msteigerwalt@gmail.com"
    }
  ],
  "name": "describe",
  "optionalDependencies": {},
  "readme": "# describe\n\nDescribe provides a simple method for testing asynchronous and synchronous\ncode within JavaScript projects.\n\n## API Documentation\n\n### describe\n\ndescribe( *groupName*, *tests*[, *options*] );\n\n#### Arguments\n\n- *groupName* (string): A human-readable description of the test group.\n- *tests* (object): An object made up of human-readable test descriptions as \nkeys and functions to run as tests.  Tests functions will be given access to\n`this.expect`.\n- *options*: Configuration options.  Possible values:\n\t- timeout (int): The max amount of time in milliseconds to wait for a test \nto run before timing out.\n\t- callbackMode (string): if set to 'node', this.expect will treat the first\nargument to the callback as an error and the second argument as the result.\n\n### describe.config\n\ndescribe.config( *key*, *value* )\n\nSets the global configuration for tests.\n\n### Synchronous Assertions\n\nthis.expect( *subject*, *expected* )\n\n#### Arguments\n\n- *subject* (mixed): the actual result.\n- *expected* (mixed): the expected result.\n\n#### Example\n\n```javascript\ndescribe(\"assertions\", {\n\t'basic synchronous expectation': function() {\n\t\tthis.expect(42, 42);\n\t}\n});\n```\n\n### Asynchronous Assertions\n\nBy passing this.expect as the callback parameter to an asynchronous function,\ndescribe will know to wait for the result of the operation before checking to\nsee if the result matches what was expected.\n\nthis.expect( *expected* )\n\n#### Basic Callbacks\n\n```javascript\nfunction addNumbersAsync(a, b, callback) {\n\tcallback(a+b);\n}\n\ndescribe(\"assertions\", {\n\t'basic asynchronous expectation': function() {\n\t\taddNumbersAsync(2, 2, this.expect(4));\n\t}\n});\n```\n\n#### Node.js-style (e, data) Callbacks\n\n```javascript\nfunction addNumbersAsync(a, b, callback) {\n\tcallback(null, a+b);\n}\n\ndescribe(\"assertions\", {\n\t'basic asynchronous expectation': function() {\n\t\taddNumbersAsync(2, 2, this.expect(4));\n\t}\n}, { callbackMode: 'node' });\n```\n\n#### Promises-style Callbacks\n\n```javascript\nfunction addThingsPromise() {\n\tvar n = 0;\n\tfor (var i in arguments) n+=arguments[i];\n\treturn {\n\t\tthen: function(success, failure) {\n\t\t\tsuccess(n);\n\t\t}\n\t};\n}\n\ndescribe(\"promise callback style\", {\n\t'promises-style addition': function() {\n\t\tthis.expect(addThingsPromise(2, 2), 4);\n\t}\n}, {\n\tcallbackMode: 'promises'\n});\n```\n\n### describe.getResults\n\nAn asynchronous method.  Calls back with the results of all tests described up\nto that point.  You should probably wait until you're done defining tests to\ncall this.\n\n#### Example Results\n\n```javascript\n{ \n\tpassed: 1,\n\ttotal: 2,\n\tresults: {\n\t\t\"sample test group\": {\n\t\t\tpassed: 1,\n\t\t\ttotal: 2,\n\t\t\tresults: {\n\t\t\t\t\"this test passed because its error is null\": null,\n\t\t\t\t\"this test failed because there's an error\": \"Error or message\"\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n### describe.logResults\n\nGets the results and outputs them either to the DOM or the console.\n\n### Test Hooks\n\nEach test group supports beforeEach, afterEach, beforeAll, and afterAll as\ntest hooks.\n\n#### Example\n\n```javascript\n(function() {\n\n\tvar arr = [], bowties;\n\n\tdescribe('array stuff', {\n\t\tbeforeAll: function() {\n\t\t\tbowties = 'cool';\n\t\t},\n\t\tbeforeEach: function() {\n\t\t\tarr = arr.concat(1,2,3);\n\t\t},\n\t\tafterEach: function() {\n\t\t\tarr = [];\n\t\t},\n\t\tafterAll: function() {\n\t\t\ttests = null;\n\t\t},\n\t\t'bowties are cool': function() {\n\t\t\tthis.expect(bowties, 'cool');\n\t\t},\n\t\t'arrays have three things': function() {\n\t\t\tthis.expect(arr.length, 3);\n\t\t\tarr.push(5);\n\t\t},\n\t\t'arrays still have three things': function() {\n\t\t\tthis.expect(arr.length, 3);\n\t\t}\n\t});\n\n}());\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/yuffster/describe.git"
  },
  "version": "1.2.0"
}
